$date
	Sun Jun 29 19:13:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module subtractor8b_tb $end
$var wire 8 ! S_TB [7:0] $end
$var wire 1 " Borrow_TB $end
$var reg 8 # A_TB [7:0] $end
$var reg 8 $ B_TB [7:0] $end
$scope module DUT $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 1 " Borrow $end
$var wire 8 ' notB [7:0] $end
$var wire 1 ( cout $end
$var wire 8 ) S [7:0] $end
$scope module FA $end
$var wire 8 * A [7:0] $end
$var wire 1 + Cin $end
$var wire 7 , carry [6:0] $end
$var wire 8 - S [7:0] $end
$var wire 1 ( Cout $end
$var wire 8 . B [7:0] $end
$scope module FA0 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 + Cin $end
$var wire 1 1 xor_temp $end
$var wire 1 2 or1_temp $end
$var wire 1 3 and3_temp $end
$var wire 1 4 and2_temp $end
$var wire 1 5 and1_temp $end
$var wire 1 6 S $end
$var wire 1 7 Cout $end
$scope module and1 $end
$var wire 1 0 A $end
$var wire 1 + B $end
$var wire 1 5 Y $end
$var wire 1 8 w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 4 Y $end
$var wire 1 9 w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 / A $end
$var wire 1 + B $end
$var wire 1 3 Y $end
$var wire 1 : w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 5 A $end
$var wire 1 4 B $end
$var wire 1 2 Y $end
$var wire 1 ; w1 $end
$var wire 1 < w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 7 Y $end
$var wire 1 = w1 $end
$var wire 1 > w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Y $end
$var wire 1 ? w1 $end
$var wire 1 @ w2 $end
$var wire 1 A w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 1 A $end
$var wire 1 + B $end
$var wire 1 6 Y $end
$var wire 1 B w1 $end
$var wire 1 C w2 $end
$var wire 1 D w3 $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 G Cin $end
$var wire 1 H xor_temp $end
$var wire 1 I or1_temp $end
$var wire 1 J and3_temp $end
$var wire 1 K and2_temp $end
$var wire 1 L and1_temp $end
$var wire 1 M S $end
$var wire 1 N Cout $end
$scope module and1 $end
$var wire 1 F A $end
$var wire 1 G B $end
$var wire 1 L Y $end
$var wire 1 O w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 K Y $end
$var wire 1 P w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 E A $end
$var wire 1 G B $end
$var wire 1 J Y $end
$var wire 1 Q w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 L A $end
$var wire 1 K B $end
$var wire 1 I Y $end
$var wire 1 R w1 $end
$var wire 1 S w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 N Y $end
$var wire 1 T w1 $end
$var wire 1 U w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 H Y $end
$var wire 1 V w1 $end
$var wire 1 W w2 $end
$var wire 1 X w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 H A $end
$var wire 1 G B $end
$var wire 1 M Y $end
$var wire 1 Y w1 $end
$var wire 1 Z w2 $end
$var wire 1 [ w3 $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 ^ Cin $end
$var wire 1 _ xor_temp $end
$var wire 1 ` or1_temp $end
$var wire 1 a and3_temp $end
$var wire 1 b and2_temp $end
$var wire 1 c and1_temp $end
$var wire 1 d S $end
$var wire 1 e Cout $end
$scope module and1 $end
$var wire 1 ] A $end
$var wire 1 ^ B $end
$var wire 1 c Y $end
$var wire 1 f w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 b Y $end
$var wire 1 g w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 \ A $end
$var wire 1 ^ B $end
$var wire 1 a Y $end
$var wire 1 h w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 c A $end
$var wire 1 b B $end
$var wire 1 ` Y $end
$var wire 1 i w1 $end
$var wire 1 j w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 ` A $end
$var wire 1 a B $end
$var wire 1 e Y $end
$var wire 1 k w1 $end
$var wire 1 l w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 _ Y $end
$var wire 1 m w1 $end
$var wire 1 n w2 $end
$var wire 1 o w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 _ A $end
$var wire 1 ^ B $end
$var wire 1 d Y $end
$var wire 1 p w1 $end
$var wire 1 q w2 $end
$var wire 1 r w3 $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 u Cin $end
$var wire 1 v xor_temp $end
$var wire 1 w or1_temp $end
$var wire 1 x and3_temp $end
$var wire 1 y and2_temp $end
$var wire 1 z and1_temp $end
$var wire 1 { S $end
$var wire 1 | Cout $end
$scope module and1 $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 z Y $end
$var wire 1 } w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 y Y $end
$var wire 1 ~ w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 s A $end
$var wire 1 u B $end
$var wire 1 x Y $end
$var wire 1 !" w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 z A $end
$var wire 1 y B $end
$var wire 1 w Y $end
$var wire 1 "" w1 $end
$var wire 1 #" w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 w A $end
$var wire 1 x B $end
$var wire 1 | Y $end
$var wire 1 $" w1 $end
$var wire 1 %" w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 v Y $end
$var wire 1 &" w1 $end
$var wire 1 '" w2 $end
$var wire 1 (" w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 v A $end
$var wire 1 u B $end
$var wire 1 { Y $end
$var wire 1 )" w1 $end
$var wire 1 *" w2 $end
$var wire 1 +" w3 $end
$upscope $end
$upscope $end
$scope module FA4 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." Cin $end
$var wire 1 /" xor_temp $end
$var wire 1 0" or1_temp $end
$var wire 1 1" and3_temp $end
$var wire 1 2" and2_temp $end
$var wire 1 3" and1_temp $end
$var wire 1 4" S $end
$var wire 1 5" Cout $end
$scope module and1 $end
$var wire 1 -" A $end
$var wire 1 ." B $end
$var wire 1 3" Y $end
$var wire 1 6" w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 2" Y $end
$var wire 1 7" w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 ," A $end
$var wire 1 ." B $end
$var wire 1 1" Y $end
$var wire 1 8" w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 3" A $end
$var wire 1 2" B $end
$var wire 1 0" Y $end
$var wire 1 9" w1 $end
$var wire 1 :" w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 0" A $end
$var wire 1 1" B $end
$var wire 1 5" Y $end
$var wire 1 ;" w1 $end
$var wire 1 <" w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 /" Y $end
$var wire 1 =" w1 $end
$var wire 1 >" w2 $end
$var wire 1 ?" w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 /" A $end
$var wire 1 ." B $end
$var wire 1 4" Y $end
$var wire 1 @" w1 $end
$var wire 1 A" w2 $end
$var wire 1 B" w3 $end
$upscope $end
$upscope $end
$scope module FA5 $end
$var wire 1 C" A $end
$var wire 1 D" B $end
$var wire 1 E" Cin $end
$var wire 1 F" xor_temp $end
$var wire 1 G" or1_temp $end
$var wire 1 H" and3_temp $end
$var wire 1 I" and2_temp $end
$var wire 1 J" and1_temp $end
$var wire 1 K" S $end
$var wire 1 L" Cout $end
$scope module and1 $end
$var wire 1 D" A $end
$var wire 1 E" B $end
$var wire 1 J" Y $end
$var wire 1 M" w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 C" A $end
$var wire 1 D" B $end
$var wire 1 I" Y $end
$var wire 1 N" w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 C" A $end
$var wire 1 E" B $end
$var wire 1 H" Y $end
$var wire 1 O" w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 J" A $end
$var wire 1 I" B $end
$var wire 1 G" Y $end
$var wire 1 P" w1 $end
$var wire 1 Q" w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 G" A $end
$var wire 1 H" B $end
$var wire 1 L" Y $end
$var wire 1 R" w1 $end
$var wire 1 S" w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 C" A $end
$var wire 1 D" B $end
$var wire 1 F" Y $end
$var wire 1 T" w1 $end
$var wire 1 U" w2 $end
$var wire 1 V" w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 F" A $end
$var wire 1 E" B $end
$var wire 1 K" Y $end
$var wire 1 W" w1 $end
$var wire 1 X" w2 $end
$var wire 1 Y" w3 $end
$upscope $end
$upscope $end
$scope module FA6 $end
$var wire 1 Z" A $end
$var wire 1 [" B $end
$var wire 1 \" Cin $end
$var wire 1 ]" xor_temp $end
$var wire 1 ^" or1_temp $end
$var wire 1 _" and3_temp $end
$var wire 1 `" and2_temp $end
$var wire 1 a" and1_temp $end
$var wire 1 b" S $end
$var wire 1 c" Cout $end
$scope module and1 $end
$var wire 1 [" A $end
$var wire 1 \" B $end
$var wire 1 a" Y $end
$var wire 1 d" w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 Z" A $end
$var wire 1 [" B $end
$var wire 1 `" Y $end
$var wire 1 e" w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 Z" A $end
$var wire 1 \" B $end
$var wire 1 _" Y $end
$var wire 1 f" w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 a" A $end
$var wire 1 `" B $end
$var wire 1 ^" Y $end
$var wire 1 g" w1 $end
$var wire 1 h" w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 ^" A $end
$var wire 1 _" B $end
$var wire 1 c" Y $end
$var wire 1 i" w1 $end
$var wire 1 j" w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 Z" A $end
$var wire 1 [" B $end
$var wire 1 ]" Y $end
$var wire 1 k" w1 $end
$var wire 1 l" w2 $end
$var wire 1 m" w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 ]" A $end
$var wire 1 \" B $end
$var wire 1 b" Y $end
$var wire 1 n" w1 $end
$var wire 1 o" w2 $end
$var wire 1 p" w3 $end
$upscope $end
$upscope $end
$scope module FA7 $end
$var wire 1 q" A $end
$var wire 1 r" B $end
$var wire 1 s" Cin $end
$var wire 1 t" xor_temp $end
$var wire 1 u" or1_temp $end
$var wire 1 v" and3_temp $end
$var wire 1 w" and2_temp $end
$var wire 1 x" and1_temp $end
$var wire 1 y" S $end
$var wire 1 ( Cout $end
$scope module and1 $end
$var wire 1 r" A $end
$var wire 1 s" B $end
$var wire 1 x" Y $end
$var wire 1 z" w1 $end
$upscope $end
$scope module and2 $end
$var wire 1 q" A $end
$var wire 1 r" B $end
$var wire 1 w" Y $end
$var wire 1 {" w1 $end
$upscope $end
$scope module and3 $end
$var wire 1 q" A $end
$var wire 1 s" B $end
$var wire 1 v" Y $end
$var wire 1 |" w1 $end
$upscope $end
$scope module or1 $end
$var wire 1 x" A $end
$var wire 1 w" B $end
$var wire 1 u" Y $end
$var wire 1 }" w1 $end
$var wire 1 ~" w2 $end
$upscope $end
$scope module or2 $end
$var wire 1 u" A $end
$var wire 1 v" B $end
$var wire 1 ( Y $end
$var wire 1 !# w1 $end
$var wire 1 "# w2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 q" A $end
$var wire 1 r" B $end
$var wire 1 t" Y $end
$var wire 1 ## w1 $end
$var wire 1 $# w2 $end
$var wire 1 %# w3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 t" A $end
$var wire 1 s" B $end
$var wire 1 y" Y $end
$var wire 1 &# w1 $end
$var wire 1 '# w2 $end
$var wire 1 (# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module inverter $end
$var wire 8 )# A [7:0] $end
$var wire 8 *# F [7:0] $end
$scope module ng0 $end
$var wire 1 +# A $end
$var wire 1 ,# Y $end
$upscope $end
$scope module ng1 $end
$var wire 1 -# A $end
$var wire 1 .# Y $end
$upscope $end
$scope module ng2 $end
$var wire 1 /# A $end
$var wire 1 0# Y $end
$upscope $end
$scope module ng3 $end
$var wire 1 1# A $end
$var wire 1 2# Y $end
$upscope $end
$scope module ng4 $end
$var wire 1 3# A $end
$var wire 1 4# Y $end
$upscope $end
$scope module ng5 $end
$var wire 1 5# A $end
$var wire 1 6# Y $end
$upscope $end
$scope module ng6 $end
$var wire 1 7# A $end
$var wire 1 8# Y $end
$upscope $end
$scope module ng7 $end
$var wire 1 9# A $end
$var wire 1 :# Y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1:#
09#
18#
07#
16#
05#
14#
03#
12#
01#
10#
0/#
0.#
1-#
0,#
1+#
b11111100 *#
b11 )#
1(#
1'#
0&#
0%#
1$#
1##
1"#
0!#
1~"
0}"
1|"
1{"
0z"
0y"
1x"
0w"
0v"
1u"
1t"
1s"
1r"
0q"
1p"
1o"
0n"
0m"
1l"
1k"
1j"
0i"
1h"
0g"
1f"
1e"
0d"
1c"
0b"
1a"
0`"
0_"
1^"
1]"
1\"
1["
0Z"
1Y"
1X"
0W"
0V"
1U"
1T"
1S"
0R"
1Q"
0P"
1O"
1N"
0M"
1L"
0K"
1J"
0I"
0H"
1G"
1F"
1E"
1D"
0C"
1B"
1A"
0@"
0?"
1>"
1="
1<"
0;"
1:"
09"
18"
17"
06"
15"
04"
13"
02"
01"
10"
1/"
1."
1-"
0,"
1+"
1*"
1)"
1("
1'"
0&"
1%"
0$"
0#"
1""
1!"
0~
1}
1|
0{
0z
1y
0x
1w
0v
0u
1t
1s
1r
0q
1p
0o
1n
1m
1l
1k
1j
1i
1h
1g
1f
0e
1d
0c
0b
0a
0`
1_
0^
1]
0\
1[
0Z
1Y
1X
0W
1V
1U
1T
1S
1R
1Q
1P
1O
0N
1M
0L
0K
0J
0I
1H
0G
0F
1E
0D
1C
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
07
16
05
04
03
02
01
00
0/
b11111100 .
b111 -
b1111000 ,
1+
b1010 *
b111 )
1(
b11111100 '
b11 &
b1010 %
b11 $
b1010 #
0"
b111 !
$end
#10
1"
0(
1!#
0u"
1}"
1y"
0x"
0'#
1z"
1&#
0s"
0c"
1i"
0^"
1g"
1b"
0a"
0o"
1d"
1n"
0\"
0L"
1R"
0G"
1P"
1K"
0J"
0X"
1M"
1W"
0E"
05"
1;"
00"
19"
14"
03"
0A"
0+"
16"
1@"
0=
1u
0."
12
0[
1e
0|
0;
0<
1G
16
0k
0d
1$"
1{
15
14
b101 ,
17
0D
b11111011 !
b11111011 )
b11111011 -
1M
1`
1q
0w
1*"
08
09
0?
1A
0>
1B
1C
1Z
0j
0_
1#"
0v
10
0t
13
01
0H
1b
1o
0y
1("
1,#
b11110101 '
b11110101 .
b11110101 *#
02#
0:
1@
1W
0g
0m
1n
1~
1&"
0+#
11#
1/
0E
1\
0s
b1010 $
b1010 &
b1010 )#
b101 #
b101 %
b101 *
#20
0P"
0S"
0g"
0j"
0}"
0"#
1J"
1H"
1a"
1_"
1x"
1v"
06
0i
0l
09"
0<"
0M"
0O"
0Y"
0d"
0f"
0p"
0z"
0|"
0(#
1=
1D
0T
0$"
1c
1a
1d
13"
11"
1E"
1\"
1s"
0"
02
0B
1C
1I
1w
0f
0h
0r
06"
08"
0B"
15"
1L"
1c"
1(
1;
1<
11
0R
0S
0""
0#"
1^
1M
1."
1{
0;"
14"
0R"
1K"
0i"
1b"
0!#
b11111110 !
b11111110 )
b11111110 -
1y"
05
04
0@
1L
1K
1z
1y
1N
0[
b1111111 ,
1|
0+"
10"
1A"
1G"
1X"
1^"
1o"
1u"
1'#
18
19
1?
0O
0P
0V
1X
0}
0~
0&"
1("
0U
1Y
1Z
0%"
1)"
1*"
0:"
0/"
0Q"
0F"
0h"
0]"
0~"
0t"
00
1F
1t
1J
0H
1x
0v
12"
1?"
1I"
1V"
1`"
1m"
1w"
1%#
0,#
1.#
b11111110 '
b11111110 .
b11111110 *#
12#
0Q
1W
0!"
1'"
07"
0="
1>"
0N"
0T"
1U"
0e"
0k"
1l"
0{"
0##
1$#
1+#
0-#
01#
1E
1s
1,"
1C"
1Z"
1q"
b1 $
b1 &
b1 )#
b11111111 #
b11111111 %
b11111111 *
#30
0"
1(
0!#
1u"
0}"
1x"
0z"
1s"
1c"
0i"
1^"
0g"
1a"
0d"
1\"
1L"
0R"
1G"
0P"
1J"
0M"
1E"
15"
0;"
10"
09"
13"
06"
1."
1|
0$"
1w
0""
1z
0}
1u
1e
0k
1`
0i
1c
0f
1^
1N
0T
1I
0R
0=
1L
12
0O
0M
0d
0{
04"
0K"
0b"
0y"
0;
1C
1G
b0 !
b0 )
b0 -
06
1[
1r
1+"
1B"
1Y"
1p"
1(#
15
b1111111 ,
17
1D
0Y
1Z
0p
1q
0)"
1*"
0@"
1A"
0W"
1X"
0n"
1o"
0&#
1'#
08
0A
1>
0B
1S
1U
1H
1j
1l
1_
1#"
1%"
1v
1:"
1<"
1/"
1Q"
1S"
1F"
1h"
1j"
1]"
1~"
1"#
1t"
10
03
11
0K
0J
0X
0b
0a
0o
0y
0x
0("
02"
01"
0?"
0I"
0H"
0V"
0`"
0_"
0m"
0w"
0v"
0%#
b11111111 '
b11111111 .
b11111111 *#
1,#
1:
1@
1P
1Q
1V
1g
1h
1m
1~
1!"
1&"
17"
18"
1="
1N"
1O"
1T"
1e"
1f"
1k"
1{"
1|"
1##
0+#
0/
0E
0\
0s
0,"
0C"
0Z"
0q"
b0 $
b0 &
b0 )#
b0 #
b0 %
b0 *
#40
1k
1R"
1i"
0`
1q
0G"
1X"
0^"
1o"
0d
0K"
b0 !
b0 )
b0 -
0b"
1i
1P"
1g"
1r
1Y"
1p"
0c
0J"
0a"
0p
0W"
0n"
1f
1M"
1d"
1j
0l
1_
1Q"
0S"
1F"
1h"
0j"
1]"
0]
0D"
0["
0b
1a
1o
0I"
1H"
1V"
0`"
1_"
1m"
00#
06#
b10011011 '
b10011011 .
b10011011 *#
08#
1g
0h
1m
0n
1N"
0O"
1T"
0U"
1e"
0f"
1k"
0l"
1/#
15#
17#
1\
1C"
1Z"
b1100100 $
b1100100 &
b1100100 )#
b1100100 #
b1100100 %
b1100100 *
#50
