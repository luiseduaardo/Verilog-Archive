$date
	Sun Aug 10 12:01:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_path_tb $end
$var wire 8 ! to_memory [7:0] $end
$var wire 8 " address [7:0] $end
$var wire 8 # IR_out [7:0] $end
$var wire 4 $ CCR_Result [3:0] $end
$var reg 3 % ALU_Sel [2:0] $end
$var reg 1 & A_Load $end
$var reg 1 ' B_Load $end
$var reg 2 ( Bus1_Sel [1:0] $end
$var reg 2 ) Bus2_Sel [1:0] $end
$var reg 1 * CCR_Load $end
$var reg 1 + IR_Load $end
$var reg 1 , MAR_Load $end
$var reg 1 - PC_Inc $end
$var reg 1 . PC_Load $end
$var reg 1 / clk $end
$var reg 8 0 from_memory [7:0] $end
$var reg 1 1 reset $end
$scope module dut $end
$var wire 3 2 ALU_Sel [2:0] $end
$var wire 1 & A_Load $end
$var wire 1 ' B_Load $end
$var wire 2 3 Bus1_Sel [1:0] $end
$var wire 2 4 Bus2_Sel [1:0] $end
$var wire 1 * CCR_Load $end
$var wire 1 + IR_Load $end
$var wire 1 , MAR_Load $end
$var wire 1 - PC_Inc $end
$var wire 1 . PC_Load $end
$var wire 1 / clk $end
$var wire 8 5 from_memory [7:0] $end
$var wire 1 1 reset $end
$var wire 8 6 address [7:0] $end
$var wire 8 7 PC_out [7:0] $end
$var wire 4 8 NZVC [3:0] $end
$var wire 8 9 IR_out [7:0] $end
$var wire 4 : CCR_Result [3:0] $end
$var wire 8 ; B_out [7:0] $end
$var wire 8 < A_out [7:0] $end
$var wire 8 = ALU_Result [7:0] $end
$var reg 8 > bus_1 [7:0] $end
$var reg 8 ? bus_2 [7:0] $end
$var reg 8 @ to_memory [7:0] $end
$scope module A $end
$var wire 1 / clk $end
$var wire 1 & enable $end
$var wire 8 A reg_in [7:0] $end
$var wire 1 1 reset $end
$var reg 8 B reg_out [7:0] $end
$upscope $end
$scope module ALU $end
$var wire 8 C a [7:0] $end
$var wire 3 D operation [2:0] $end
$var wire 8 E b [7:0] $end
$var parameter 3 F ADD $end
$var parameter 3 G AND $end
$var parameter 3 H DEC $end
$var parameter 3 I INC $end
$var parameter 3 J NOT $end
$var parameter 3 K OR $end
$var parameter 3 L SUB $end
$var parameter 3 M XOR $end
$var reg 1 N c $end
$var reg 1 O n $end
$var reg 8 P result [7:0] $end
$var reg 1 Q v $end
$var reg 1 R z $end
$upscope $end
$scope module B $end
$var wire 1 / clk $end
$var wire 1 ' enable $end
$var wire 8 S reg_in [7:0] $end
$var wire 1 1 reset $end
$var reg 8 T reg_out [7:0] $end
$upscope $end
$scope module CCR $end
$var wire 1 / clk $end
$var wire 1 * enable $end
$var wire 4 U reg_in [3:0] $end
$var wire 1 1 reset $end
$var reg 4 V reg_out [3:0] $end
$upscope $end
$scope module IR $end
$var wire 1 / clk $end
$var wire 1 + enable $end
$var wire 8 W reg_in [7:0] $end
$var wire 1 1 reset $end
$var reg 8 X reg_out [7:0] $end
$upscope $end
$scope module MAR $end
$var wire 1 / clk $end
$var wire 1 , enable $end
$var wire 8 Y reg_in [7:0] $end
$var wire 1 1 reset $end
$var reg 8 Z reg_out [7:0] $end
$upscope $end
$scope module PC $end
$var wire 1 / clk $end
$var wire 8 [ count_in [7:0] $end
$var wire 1 - enable $end
$var wire 1 . load $end
$var wire 1 1 reset $end
$var reg 8 \ count [7:0] $end
$upscope $end
$scope begin MUX_BUS1 $end
$upscope $end
$scope begin MUX_BUS2 $end
$upscope $end
$upscope $end
$scope task reset_dut $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 M
b10 L
b101 K
b111 J
b1 I
b11 H
b100 G
b0 F
$end
#0
$dumpvars
b0 \
bx [
b0 Z
bx Y
b0 X
bx W
b0 V
bx U
b0 T
bx S
xR
xQ
bx P
xO
xN
b0 E
bx D
b0 C
b0 B
bx A
bx @
bx ?
bx >
bx =
b0 <
b0 ;
b0 :
b0 9
bx 8
b0 7
b0 6
bx 5
bx 4
bx 3
bx 2
01
bx 0
0/
x.
x-
x,
x+
x*
bx )
bx (
x'
x&
bx %
b0 $
b0 #
b0 "
bx !
$end
#5000
1/
#10000
b10101010 ?
b10101010 A
b10101010 S
b10101010 W
b10101010 Y
b10101010 [
0/
1+
b10 )
b10 4
b10101010 0
b10101010 5
11
#15000
b10101010 #
b10101010 9
b10101010 X
1/
#20000
0/
1,
0+
#25000
b10101010 "
b10101010 6
b10101010 Z
1/
#30000
0/
1&
0,
#35000
b10101010 <
b10101010 B
b10101010 C
1/
#40000
0/
1'
0&
#45000
b10101010 ;
b10101010 E
b10101010 T
1/
#50000
0/
1.
0'
#55000
1/
#60000
b0 !
b0 @
b0 >
0/
b0 (
b0 3
0.
#65000
1/
#70000
b10101010 !
b10101010 @
b10101010 >
0/
b1 (
b1 3
#75000
1/
#80000
0/
b10 (
b10 3
#85000
1/
#90000
b101 ?
b101 A
b101 S
b101 W
b101 Y
b101 [
0/
1&
b101 0
b101 5
#95000
b101 <
b101 B
b101 C
1/
#100000
b11 ?
b11 A
b11 S
b11 W
b11 Y
b11 [
0/
1'
b11 0
b11 5
0&
#105000
b11 !
b11 @
b11 >
b11 ;
b11 E
b11 T
1/
#110000
0Q
bx00 8
bx00 U
0N
b1000 =
b1000 P
b1000 ?
b1000 A
b1000 S
b1000 W
b1000 Y
b1000 [
0/
1*
b0 %
b0 2
b0 D
b0 )
b0 4
0'
#115000
bx00 $
bx00 :
bx00 V
1/
#120000
b10 ?
b10 A
b10 S
b10 W
b10 Y
b10 [
b10 =
b10 P
0R
b0 8
b0 U
0O
0/
b10 %
b10 2
b10 D
#125000
b0 $
b0 :
b0 V
1/
#130000
b1 ?
b1 A
b1 S
b1 W
b1 Y
b1 [
b1 =
b1 P
0/
b100 %
b100 2
b100 D
#135000
1/
#140000
b111 ?
b111 A
b111 S
b111 W
b111 Y
b111 [
b111 =
b111 P
0/
b101 %
b101 2
b101 D
#145000
1/
#150000
b1010101 ?
b1010101 A
b1010101 S
b1010101 W
b1010101 Y
b1010101 [
0/
1,
b10 )
b10 4
b1010101 0
b1010101 5
0*
#155000
b1010101 "
b1010101 6
b1010101 Z
1/
#160000
0/
0,
#165000
1/
#170000
0/
#175000
1/
#180000
0/
#185000
1/
#190000
0/
#195000
1/
#200000
0/
#205000
1/
#210000
0/
